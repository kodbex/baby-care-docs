"use strict";(self.webpackChunkbaby_development_ui_kit=self.webpackChunkbaby_development_ui_kit||[]).push([[9338],{2401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"ui-kit/ui-elements/scroll-list","title":"ScrollList","description":"MNFlatList is a generic, reusable wrapper around React Native\'s `FlatList` component.","source":"@site/docs/ui-kit/ui-elements/scroll-list.md","sourceDirName":"ui-kit/ui-elements","slug":"/ui-kit/ui-elements/scroll-list","permalink":"/baby-development-ui-kit/docs/ui-kit/ui-elements/scroll-list","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"ScrollList","description":"MNFlatList is a generic, reusable wrapper around React Native\'s `FlatList` component."},"sidebar":"tutorialSidebar","previous":{"title":"Progress Bars","permalink":"/baby-development-ui-kit/docs/ui-kit/ui-elements/progress-bars"},"next":{"title":"Skeleton","permalink":"/baby-development-ui-kit/docs/ui-kit/ui-elements/skeleton"}}');var i=n(4848),r=n(8453);const l={sidebar_position:10,title:"ScrollList",description:"MNFlatList is a generic, reusable wrapper around React Native's `FlatList` component."},d="Purpose",c={},o=[{value:"MNFlatList",id:"mnflatlist",level:2},{value:"Import",id:"import",level:3},{value:"Props",id:"props",level:3},{value:"Basic Usage",id:"basic-usage",level:3},{value:"MNPaginatedList",id:"mnpaginatedlist",level:2},{value:"Import",id:"import-1",level:3},{value:"Props",id:"props-1",level:3},{value:"Basic Usage",id:"basic-usage-1",level:3}];function a(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"purpose",children:"Purpose"})}),"\n",(0,i.jsxs)(t.p,{children:["MNFlatList is a generic, reusable wrapper around React Native's ",(0,i.jsx)(t.code,{children:"FlatList"})," component.\nIt simplifies usage by providing default styling and customizable props for flexible list rendering."]}),"\n",(0,i.jsx)(t.h2,{id:"mnflatlist",children:"MNFlatList"}),"\n",(0,i.jsx)(t.h3,{id:"import",children:"Import"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import MNFlatList from '@/components/ui/scrollList/MNFlatList';\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Prop"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Optional"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"data"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"T[]"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Array of items to be rendered in the list"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"renderItem"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"FlatListProps<T>['renderItem']"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Function that renders each item"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"keyExtractor"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"FlatListProps<T>['keyExtractor']"})}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Function to extract a unique key for each item"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ListHeaderComponent"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"React.ReactElement | null"})}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Component rendered at the top of the list"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ListFooterComponent"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"React.ReactElement | null"})}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Component rendered at the bottom of the list"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"contentContainerStyle"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Additional styles applied to the content container"})]})]})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:" <MNFlatList\n    data={children}\n    renderItem={childRow}\n    contentContainerStyle={styles.flatListContentContainerStyle}\n/>\n\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"mnpaginatedlist",children:"MNPaginatedList"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"MNPaginatedList"})," renders a paginated list using ",(0,i.jsx)(t.code,{children:"FlatList"}),". It simulates API data\nfetching with pagination, supports both vertical and horizontal scrolling, and shows a loading spinner when new data is\nbeing fetched."]}),"\n",(0,i.jsx)(t.h3,{id:"import-1",children:"Import"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import MNPaginatedList from '@/components/ui/scrollList/MNPaginatedList';\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"props-1",children:"Props"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Prop"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"horizontal"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"false"}),(0,i.jsx)(t.td,{children:"If true, renders the list horizontally"})]})})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"basic-usage-1",children:"Basic Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"<MNPaginatedList horizontal={false}/>\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE:"}),"\nAll example can be founded in ",(0,i.jsx)(t.code,{children:"paginated_list.tsx"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);