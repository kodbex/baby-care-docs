"use strict";(self.webpackChunkbaby_development_ui_kit=self.webpackChunkbaby_development_ui_kit||[]).push([[5075],{1254:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>r,contentTitle:()=>c,default:()=>o,frontMatter:()=>t,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"ui-kit/forms/input-fields","title":"MNTextInput","description":"MNTextInput is a customizable and reusable input field component for React Native that supports labels, icons, and various input configurations like secure text, multiline input, and custom event handlers.","source":"@site/docs/ui-kit/forms/input-fields.md","sourceDirName":"ui-kit/forms","slug":"/ui-kit/forms/input-fields","permalink":"/baby-development-ui-kit/docs/ui-kit/forms/input-fields","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"MNTextInput","description":"MNTextInput is a customizable and reusable input field component for React Native that supports labels, icons, and various input configurations like secure text, multiline input, and custom event handlers."},"sidebar":"tutorialSidebar","previous":{"title":"Forms","permalink":"/baby-development-ui-kit/docs/category/forms"},"next":{"title":"MNCheckboxes","permalink":"/baby-development-ui-kit/docs/ui-kit/forms/checkboxes"}}');var s=n(4848),l=n(8453);const t={sidebar_position:1,title:"MNTextInput",description:"MNTextInput is a customizable and reusable input field component for React Native that supports labels, icons, and various input configurations like secure text, multiline input, and custom event handlers."},c="TextInput",r={},h=[{value:"MNTextInput",id:"mntextinput",level:2},{value:"Import",id:"import",level:3},{value:"Props",id:"props",level:3},{value:"Usage Example",id:"usage-example",level:3},{value:"MNTextInputAnimated",id:"mntextinputanimated",level:2},{value:"Import",id:"import-1",level:3},{value:"Props",id:"props-1",level:3},{value:"Usage Example",id:"usage-example-1",level:3},{value:"MNTextInputRounded",id:"mntextinputrounded",level:2},{value:"Import",id:"import-2",level:3},{value:"Props",id:"props-2",level:3},{value:"Usage Example",id:"usage-example-2",level:3},{value:"MNTextInputRounded",id:"mntextinputrounded-1",level:2},{value:"Import",id:"import-3",level:3},{value:"Props",id:"props-3",level:3},{value:"Usage Example",id:"usage-example-3",level:3},{value:"MNOneLineTextInputAnimated",id:"mnonelinetextinputanimated",level:2},{value:"Import",id:"import-4",level:3},{value:"Props",id:"props-4",level:3},{value:"Example Usage",id:"example-usage",level:3}];function x(e){const d={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.header,{children:(0,s.jsx)(d.h1,{id:"textinput",children:"TextInput"})}),"\n",(0,s.jsx)(d.h2,{id:"mntextinput",children:"MNTextInput"}),"\n",(0,s.jsx)(d.p,{children:"MNTextInput is a customizable and reusable input field component for React Native that supports labels, icons, and\nvarious input configurations like secure text, multiline input, and custom event handlers."}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"import",children:"Import"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"import MNTextInput from '@/components/ui/forms/MNTextInput';\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Prop"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Default"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"label"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"Required"})}),(0,s.jsx)(d.td,{children:"The text label displayed above the input field."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"''"})}),(0,s.jsx)(d.td,{children:"The current value of the input."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onChangeText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"(text: string) => void"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"Required"})}),(0,s.jsx)(d.td,{children:"Callback when the text value changes."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"icon"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"Required"})}),(0,s.jsx)(d.td,{children:"Ionicon name for the icon displayed on the right."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"autoComplete"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsxs)(d.td,{children:["Optional autoComplete value (e.g., ",(0,s.jsx)(d.code,{children:"email"}),", ",(0,s.jsx)(d.code,{children:"username"}),", etc.)."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"multipleLines"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Whether the input supports multiple lines."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"editable"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"true"})}),(0,s.jsx)(d.td,{children:"Whether the input is editable."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"secureText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Whether the text should be obscured (e.g., for passwords)."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"iconClick"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Optional callback for when the icon is pressed."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onFocus"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Optional callback when the input is focused."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onBlur"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Optional callback when the input loses focus."})]})]})]}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:'<MNTextInput\n    label="Email"\n    value={email}\n    onChangeText={setEmail}\n    icon="mail-outline"\n    autoComplete="email"\n    secureText={false}\n/>\n'})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h2,{id:"mntextinputanimated",children:"MNTextInputAnimated"}),"\n",(0,s.jsx)(d.p,{children:"A customizable and animated MNTextInput component with floating label support and optional icon\ninteraction."}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"import-1",children:"Import"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"import MNTextInputAnimated from '@/components/MNTextInputAnimated';\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"props-1",children:"Props"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Prop"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Required"}),(0,s.jsx)(d.th,{children:"Default"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"label"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2013"}),(0,s.jsx)(d.td,{children:"Text to display as the floating label."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"''"})}),(0,s.jsx)(d.td,{children:"Current value of the input field."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onChangeText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"(text: string) => void"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2013"}),(0,s.jsx)(d.td,{children:"Function called when the text changes."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"icon"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2013"}),(0,s.jsx)(d.td,{children:"Name of Ionicon to display on the right side."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"autoComplete"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsxs)(d.td,{children:["Optional autocomplete setting for input (e.g., ",(0,s.jsx)(d.code,{children:"email"}),", ",(0,s.jsx)(d.code,{children:"username"}),")."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"multipleLines"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Whether to allow multiline input."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"editable"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"true"})}),(0,s.jsx)(d.td,{children:"Determines if the input can be edited."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"secureText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Masks the text input (for passwords)."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"iconClick"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Function triggered when the icon is pressed."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onFocus"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Callback fired on focus event."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onBlur"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Callback fired on blur event."})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"usage-example-1",children:"Usage Example"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"<MNTextInputAnimated\n    label=\"Email\"\n    value={email}\n    onChangeText={setEmail}\n    icon=\"mail-outline\"\n    autoComplete=\"email\"\n    secureText={false}\n    editable={true}\n    onFocus={() => console.log('Focused')}\n    onBlur={() => console.log('Blurred')}\n    iconClick={() => console.log('Icon clicked')}\n/>\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h2,{id:"mntextinputrounded",children:"MNTextInputRounded"}),"\n",(0,s.jsx)(d.p,{children:"A customizable and reusable rounded input field component with an optional icon and label, designed for React Native\napplications."}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"import-2",children:"Import"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"import MNTextInputRounded from '@/components/MNTextInputRounded';\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"props-2",children:"Props"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Prop Name"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Required"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"label"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"The text label displayed above the input."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"The current value of the input field."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onChangeText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"(text: string) => void"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"Callback function when the text is changed."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"icon"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"Icon name from Ionicons to be displayed on the right side."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"autoComplete"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Specifies autocomplete hints (e.g., ",(0,s.jsx)(d.code,{children:"email"}),", ",(0,s.jsx)(d.code,{children:"name"}),")."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"multipleLines"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Whether to allow multiline input. Default is ",(0,s.jsx)(d.code,{children:"false"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"editable"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["If false, disables editing. Default is ",(0,s.jsx)(d.code,{children:"true"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"secureText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Hides the input text (for passwords). Default is ",(0,s.jsx)(d.code,{children:"false"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"iconClick"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the icon is clicked."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onFocus"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the input field receives focus."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onBlur"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the input field loses focus."})]})]})]}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"usage-example-2",children:"Usage Example"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:'\n<MNTextInputRounded\n    label="Email"\n    value={email}\n    onChangeText={setEmail}\n    icon="mail-outline"\n    autoComplete="email"\n    secureText={false}\n    iconClick={() => console.log(\'Icon clicked\')}\n/>\n'})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h2,{id:"mntextinputrounded-1",children:"MNTextInputRounded"}),"\n",(0,s.jsx)(d.p,{children:"A customizable and reusable rounded input field component with an optional icon and label, designed for React Native\napplications."}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"import-3",children:"Import"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"import MNTextInputRounded from '@/components/MNTextInputRounded';\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"props-3",children:"Props"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Prop Name"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Required"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"label"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"The text label displayed above the input."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"The current value of the input field."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onChangeText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"(text: string) => void"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"Callback function when the text is changed."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"icon"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705 Yes"}),(0,s.jsx)(d.td,{children:"Icon name from Ionicons to be displayed on the right side."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"autoComplete"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Specifies autocomplete hints (e.g., ",(0,s.jsx)(d.code,{children:"email"}),", ",(0,s.jsx)(d.code,{children:"name"}),")."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"multipleLines"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Whether to allow multiline input. Default is ",(0,s.jsx)(d.code,{children:"false"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"editable"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["If false, disables editing. Default is ",(0,s.jsx)(d.code,{children:"true"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"secureText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsxs)(d.td,{children:["Hides the input text (for passwords). Default is ",(0,s.jsx)(d.code,{children:"false"}),"."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"iconClick"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the icon is clicked."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onFocus"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the input field receives focus."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onBlur"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c No"}),(0,s.jsx)(d.td,{children:"Callback when the input field loses focus."})]})]})]}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"usage-example-3",children:"Usage Example"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:'<MNTextInputRounded\n    label="Email"\n    value={email}\n    onChangeText={setEmail}\n    icon="mail-outline"\n    autoComplete="email"\n    secureText={false}\n    iconClick={() => console.log(\'Icon clicked\')}\n/>\n'})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h2,{id:"mnonelinetextinputanimated",children:"MNOneLineTextInputAnimated"}),"\n",(0,s.jsxs)(d.p,{children:["A customizable, animated single-line ",(0,s.jsx)(d.code,{children:"TextInput"})," component for React Native, with support for floating labels, icons,\nand various input behaviors. Designed for use in mobile forms."]}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"import-4",children:"Import"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:"import MNOneLineTextInputAnimated from '@/components/ui/forms/textInputs/MNOneLineTextInputAnimated';\n"})}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"props-4",children:"Props"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Prop"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Required"}),(0,s.jsx)(d.th,{children:"Default"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"label"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2014"}),(0,s.jsx)(d.td,{children:"Label text shown above the input field."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"''"})}),(0,s.jsx)(d.td,{children:"Input field value."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onChangeText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"(text: string) => void"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2014"}),(0,s.jsx)(d.td,{children:"Callback when input text changes."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"icon"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u2705"}),(0,s.jsx)(d.td,{children:"\u2014"}),(0,s.jsx)(d.td,{children:"Icon name (Ionicons) displayed on the right."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"autoComplete"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"string"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"HTML autocomplete value (ignored by TypeScript)."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"multipleLines"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Allows multi-line input."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"editable"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"true"})}),(0,s.jsx)(d.td,{children:"Whether the input is editable."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"secureText"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"boolean"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"false"})}),(0,s.jsx)(d.td,{children:"Masks the text for secure entry (e.g., password)."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"iconClick"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Function called when the icon is pressed."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onFocus"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Function called when the input is focused."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"onBlur"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"() => void"})}),(0,s.jsx)(d.td,{children:"\u274c"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"-"})}),(0,s.jsx)(d.td,{children:"Function called when the input loses focus."})]})]})]}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-tsx",children:'<MNOneLineTextInputAnimated\n  label="Email"\n  value={email}\n  onChangeText={setEmail}\n  icon="mail"\n  autoComplete="email"\n  secureText={false}\n/>\n\n---\n\n> **NOTE:**\n> All example can be founded in `input_fields.tsx`\n'})})]})}function o(e={}){const{wrapper:d}={...(0,l.R)(),...e.components};return d?(0,s.jsx)(d,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>t,x:()=>c});var i=n(6540);const s={},l=i.createContext(s);function t(e){const d=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function c(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:d},e.children)}}}]);